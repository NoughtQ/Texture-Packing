#let render(theme_name) = [
  #state_block_theme.update(theme_name)

  #proof(name: [Proof])[
    Assume that:

    - all items have been sorted by their height in decreasing order
    - $L$: the list of items
    - $O P T(L)$: the optimal solution(the actual minimum height) of texture packing
    - $F F D H(L)$: the solution attained from the FFDH algorithm
    - $w_i$: the width of the ith item
    - $h_i$: the height of the ith item
      - $h_0$: the highest height
    - $W$: the fixed width of the bin
    - $A = sum_(i=1)^n w_i dot h_i$ï¼šthe total area of all items

    First of all, we can determine the upper bound of the $O P T(L)$

    - Obviously, $O P T(L) gt.eq h_0$
    - $O P T(L) gt.eq frac(A, W)$, because the item on the right side represents the ideal result when all items fill the bin "tightly", i.e. no space waste in the bin.


    Claim: $F F D H(L)$ satisfies the inequality below:

    $ F F D H(L) lt.eq frac(A, W) + h_0 lt.eq 2 O P T(L) $

    - let $h_r = F F D H(L) - h_0$, which is the remaining height of the bin in FFDH algorithm
    - then we should prove that $h_r lt.eq frac(A, W)$. Because this approximation algorithm is also a #fakebold[greedy algorithm], which always put the highest item into the bin first, it ensures that the correctness of this inequality

    As a consequence, the approximation ratio $rho = frac(F F D H(L), O P T(L)) lt.eq 2$, and we can guarantee that FFDH is a 2-approximation algorithm.


    Beware that our proof is not very rigor, and the actual approximation ratio may be less than 2.
  ]

  #v(.5em)
]
#render("thickness")